
/// 
/// === FUNCTIONS === ///
/// 
/// 
@function grid-generic-class-name($bk) {
	@if $bk == "all" {
		@return "";
	}
	@return "-" + $bk;
}

@function grid-class-name($bk, $size) {
	@if $bk == "all" {
		@return "-" + $size;
	}
	@return "-" + $bk + "-" + $size;
}



/// 
/// === MIXINS === ///
/// 
/// 
@mixin up-to($breakpoint) {
	@if map-has-key($breakpointsUp, $breakpoint) {
		@media #{inspect(map-get($breakpointsUp, $breakpoint))} {
			@content;
		}
	}
}

@mixin grid-system($bk) {
	.col#{grid-generic-class-name($bk)} {
		flex: 1;
	}

	@for $size from 1 through $total_columns {
		.col#{grid-class-name($bk, $size)} {
			width: calc($size / $total_columns * 100%);
		}
	}
}


/// 
/// === THEME SYSTEM === ///
/// 
/// 


@mixin make-palette($k, $v, $lights) {
	$i: 0;
	@each $l in $lights {
		--c-#{$k}-#{$i}: hsl(#{nth($v, 1)}, #{nth($v, 2)}, #{$l});
		$i: $i + 1;
	}
}

@mixin make-mono-palette() {
	$mn: (
		00: 0%,
		10: 10%,
		20: 20%,
		30: 30%,
		40: 40%,
		50: 50%,
		60: 60%,
		70: 70%,
		80: 80%,
		90: 90%,
		95: 95%,
		99: 100%,
	);
	@each $k, $v in $mn {
		--c-mn-#{$k}: hsl(0, 0%, #{$v});
	}
	--c-bg-1: var(--c-mn-99);
	--c-bg-2: var(--c-mn-95);
	--c-fg-1: var(--c-mn-10);
	--c-fg-2: var(--c-mn-20);
	--c-fg-3: var(--c-mn-30);
	--c-paper: var(--c-mn-99);
}

@mixin make-theme($map, $lights) {
	@each $k, $v in $map {
		@if ($k == "pr") {
			@include make-palette($k, $v, map-get($lights, "pr"));
			--c-pr-h: #{nth($v, 1)};
			--c-pr-s: #{nth($v, 2)};
			--c-siteheader-bg-light: hsla(#{nth($v, 1)}, #{nth($v, 2)}, 50%, 0.5);
			--c-siteheader-bg-dark: hsla(#{nth($v, 1)}, #{nth($v, 2)}, 30%, 0.5);
			--c-sitemenu-bg-light: hsla(#{nth($v, 1)}, #{nth($v, 2)}, 50%, 0.7);
			--c-sitemenu-bg-dark: hsla(#{nth($v, 1)}, #{nth($v, 2)}, 30%, 0.7);
		}

		@if ($k == "se") {
			@include make-palette($k, $v, map-get($lights, "se"));
		}

		@if ($k == "ic") {
			@include make-palette($k, $v, map-get($lights, "ic"));
		}

		@if ($k == "bg") {
			@include make-palette($k, $v, map-get($lights, "bg"));
		}
	}

	@media (prefers-color-scheme: light) {
		--c-siteheader-logo: var(--c-mn-99);
		--c-siteheader-logo-hover: var(--c-pr-7);
		--c-siteheader-bg: var(--c-siteheader-bg-light);
		--c-sitemenu-bg: var(--c-sitemenu-bg-light);
		--c-sitemenu-fg: var(--c-mn-99);
		--c-sitemenu-fg-hover: var(--c-pr-7);
	}
	@media (prefers-color-scheme: dark) {
		--c-bg-1: var(--c-mn-0);
		--c-bg-2: var(--c-mn-20);
		--c-fg-1: var(--c-mn-70);
		--c-fg-2: var(--c-mn-80);
		--c-fg-3: var(--c-mn-90);
		--c-paper: var(--c-mn-0);
		--c-siteheader-logo: var(--c-pr-6);
		--c-siteheader-logo-hover: var(--c-mn-99);
		--c-siteheader-bg: var(--c-siteheader-bg-dark);
		--c-sitemenu-bg: var(--c-sitemenu-bg-dark);
		--c-sitemenu-fg: var(--c-pr-6);
		--c-sitemenu-fg-hover: var(--c-mn-99);
	}
}




/// 
/// === ANOTHER MIXINS === ///
/// 
/// 
@mixin adjust-axis($a, $value) {
	@if $a == "h" {
		justify-content: $value;
	}
	@if $a == "v" {
		align-items: $value;
	}
}

@mixin transition($t: 0.4s) {
	transition: all $t ease;
}

// MARGING FEATURE

@function margin-property($v) {
	@if ($v == "") {
		@return "";
	}
	@return "-" + $v;
}

@mixin make-margin($margins, $spacing) {
	@each $k_margin, $v_margin in $margins {
		@each $k_spacing, $v_spacing in $spacing {
			.u-#{$k_margin}-#{$k_spacing} {
				margin#{margin-property($v_margin)}: $v_spacing;
			}
		}
	}
}

@mixin ico($ico) {
	-webkit-mask-image: $ico;
	mask-image: $ico;
}

@mixin shadow-1 {
	-webkit-box-shadow: 0px 3px 5px 0px rgba(0, 0, 0, 0.5);
	-moz-box-shadow: 0px 3px 5px 0px rgba(0, 0, 0, 0.5);
	box-shadow: 0px 3px 5px 0px rgba(0, 0, 0, 0.5);
}

@mixin gradient-1 {
	background-image: -webkit-linear-gradient($logo-gradient);
	background-image: linear-gradient($logo-gradient);
}

@mixin focus {
	&:focus {
		border-color: var(--c-pr-4);
		-webkit-box-shadow: 0px 0px 14px 0px var(--c-ic-2);
		-moz-box-shadow: 0px 0px 14px 0px var(--c-ic-2);
		box-shadow: 0px 0px 14px 0px var(--c-ic-2);
		outline: none;
	}
}